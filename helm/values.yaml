# Default values for wms.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: harbor.mf.uz/hr/calendar
  pullPolicy: Always #IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest-stage"

imagePullSecrets:
  - name: harbor
nameOverride: "calendar"
fullnameOverride: "calendar"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Will move to secret in next changes
env:
  - name: AUTH_USE_TLS
    value: "false"

  - name: AUTH_HOST
    value: "auth"

  - name: AUTH_PORT
    value: "8080"

  - name: POSTGRES_HOST
    value: "hr-postgresql.db"

  - name: POSTGRES_PORT
    value: "5432"

  - name: POSTGRES_DB
    value: "calendar"

  - name: POSTGRES_USER
    valueFrom:
      secretKeyRef:
        name: hr-backend-secrets
        key: calendar__postgres_user

  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: hr-backend-secrets
        key: calendar__postgres_pass

  - name: AUTH_INTERNAL_USERNAME
    valueFrom:
      secretKeyRef:
        name: hr-backend-secrets
        key: calendar__auth_internal_user

  - name: AUTH_INTERNAL_PASSWORD
    valueFrom:
      secretKeyRef:
        name: hr-backend-secrets
        key: calendar__auth_internal_pass

# livenessProbe:
#   enabled: false
#   cheak:
#     httpGet:
#       path: /health
#       port: 8080
#     terminationGracePeriodSeconds: 30

# readinessProbe:
#   enabled: false
#   cheak:
#     httpGet:
#       path: /health
#       port: 8080

service:
  type: ClusterIP
  port: 9090
  targetPort: 9090

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    # cert-manager.io/issuer: "letsencrypt-staging"
    # certmanager.io/acme-challenge-type: http01
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cportal-v2.mf.uz
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: wms-mf-tls
  #    hosts:
  #      - wms.mf.uz

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
